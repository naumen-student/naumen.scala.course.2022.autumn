[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\sasha\AppData\Local\Temp\idea6.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\sasha\AppData\Local\Temp\idea6.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.7.1 (Amazon.com Inc. Java 1.8.0_342)
[debug]       Load.loadUnit: plugins took 98.2193ms
[debug]       Load.loadUnit: defsScala took 0.3385ms
[debug] [Loading] Scanning directory C:\Users\sasha\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sasha\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 135.9721 ms
[debug]           Load.resolveProject(global-plugins) took 42.669ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\sasha\.sbt\1.0\plugins, plugins: List(<none>))) took 202.0287ms
[debug] [Loading] Done in C:\Users\sasha\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 220.9972ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2143ms
[debug]     Load.loadUnit(file:/C:/Users/sasha/.sbt/1.0/plugins/, ...) took 327.5183ms
[debug]   Load.apply: load took 461.8275ms
[debug]   Load.apply: resolveProjects took 5.1747ms
[debug]   Load.apply: finalTransforms took 55.6681ms
[debug]   Load.apply: config.delegates took 8.6341ms
[debug]   Load.apply: Def.make(settings)... took 343.1312ms
[debug]   Load.apply: structureIndex took 94.357ms
[debug]   Load.apply: mkStreams took 2.1563ms
[info] loading global plugins from C:\Users\sasha\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2324.2993ms
[debug]           Load.loadUnit: plugins took 40.3337ms
[debug]           Load.loadUnit: defsScala took 0.0055ms
[debug] [Loading] Scanning directory C:\Users\sasha\IdeaProjects\SbtExampleProject\project
[debug]             Load.loadUnit: mkEval took 11.6627ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\sasha\IdeaProjects\SbtExampleProject\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.567 ms
[info] loading settings for project sbtexampleproject-build from idea6.sbt ...
[debug]               Load.resolveProject(sbtexampleproject-build) took 4.229ms
[debug]             Load.loadTransitive: finalizeProject(Project(id sbtexampleproject-build, base: C:\Users\sasha\IdeaProjects\SbtExampleProject\project, plugins: List(<none>))) took 8.7609ms
[debug] [Loading] Done in C:\Users\sasha\IdeaProjects\SbtExampleProject\project, returning: (sbtexampleproject-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 249.4416ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.2037ms
[debug]         Load.loadUnit(file:/C:/Users/sasha/IdeaProjects/SbtExampleProject/project/, ...) took 297.5041ms
[debug]       Load.apply: load took 299.2296ms
[debug]       Load.apply: resolveProjects took 0.1798ms
[debug]       Load.apply: finalTransforms took 15.8257ms
[debug]       Load.apply: config.delegates took 0.6281ms
[debug]       Load.apply: Def.make(settings)... took 209.2638ms
[debug]       Load.apply: structureIndex took 21.8044ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\sasha\IdeaProjects\SbtExampleProject\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 846.1864ms
[debug]     Load.loadUnit: defsScala took 0.0025ms
[debug] [Loading] Scanning directory C:\Users\sasha\IdeaProjects\SbtExampleProject
[debug]       Load.loadUnit: mkEval took 0.1908ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.8031 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.0082ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\sasha\IdeaProjects\SbtExampleProject, plugins: List(<none>))) took 26.0357ms
[debug] [Loading] Done in C:\Users\sasha\IdeaProjects\SbtExampleProject, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 75.2871ms
[debug]     Load.loadUnit: cleanEvalClasses took 2.3916ms
[debug]   Load.loadUnit(file:/C:/Users/sasha/IdeaProjects/SbtExampleProject/, ...) took 924.3394ms
[debug] Load.apply: load took 925.6814ms
[debug] Load.apply: resolveProjects took 0.0816ms
[debug] Load.apply: finalTransforms took 19.0426ms
[debug] Load.apply: config.delegates took 0.3497ms
[debug] Load.apply: Def.make(settings)... took 67.3475ms
[debug] Load.apply: structureIndex took 27.0955ms
[debug] Load.apply: mkStreams took 0.0024ms
[info] set current project to SbtExampleProject (in build file:/C:/Users/sasha/IdeaProjects/SbtExampleProject/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57453 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57453, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to SbtExampleProject (in build file:/C:/Users/sasha/IdeaProjects/SbtExampleProject/)
[debug] > Exec(idea-shell, None, None)
